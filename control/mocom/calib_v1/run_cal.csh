#!/bin/csh -x
# This script runs MOCOM-UA_newer and contains all the necessary input
# arguements.  Modify this script to change input arguements.

# Created by:		AW Wood (based on earlier VIC MOCOM with M McGuire)
# Modified:
#                       August, 2006, AWW:  cleaned up, reorganized, 
#                                           implementing monthly only version
#                                           added stats/plot utility files
#                                           upgrades to code, a few bugs fixed
#                                           plus major documentation
#
#                       PN/PCIC, ~200Xish, more & bigger bugs fixed  in original 
#                          mocom implementation...daily stats code provided
#                       (Katrina Bennett & colleagues)
#
#                       AW Wood, 2015 -- wrapped around a fortran snow17/sac version
#
#############################################################################

#module load gcc_4.4.7-impi_5.1.2
#module load netcdf_fortran+c_4.4.3-gcc_4.4.7
#source /sw/anaconda-2.3.0/bin/activate /gscratch/hydro/ymao/anaconda3/envs/vic_rvic

set bas = $1

set optmize_cfg = /gscratch/hydro/ymao/data_assim/control/mocom/calib_v1/$bas/optimize.cfg

set run_ident  = v1   # char string used to separate run time files 
                     # created by this program, from those created by other
                     # simultaneous runs of this program

set num_start  = 40  # <num start | start file> either: number of random 
                     # simulation param. sets used to start test population, 
                     # OR: <restart file name> if restart desired 

#set start_file = 
set num_sets   = 20  # number of simulation param. sets in the test population
set num_tests  = 2   # number of test functions (stats) to be minimized
                     # these must be generated by the run stat assessment prog,
                     # (right now it's sflow_opti_stats.*.pl). This doesn't count
                     # the R2 or NS Eff value (*-1) which is always minimized; 
                     # $num_tests stats must follow the first value in the $R2FILE. 
                     # eg, NSE, NSElog, abs(ann vol err), abs(avg peak diff), rmse, NSC

set num_param  = 6  # number of params used by the simulation
                     # this is effectively hardwired, along with the order of the
                     # params, in the $run_script:  MUST UPDATE RUN SCRIPT IF CHANGED

set run_script = /gscratch/hydro/ymao/data_assim/control/mocom/calib_v1/optimize.py
                     # run script used to control model simulations. 
                     # called by main prog.

set optim_log  = /gscratch/hydro/ymao/data_assim/output/mocom/calib_v1/$bas/log.txt  # log file -- records iterations, 
                                  # and the final optimized results

set param_range_file = /gscratch/hydro/ymao/data_assim/control/mocom/calib_v1/param_limits.txt
                       # test file that gives the
                       # param. name, max and min values

set stor_dir  = /gscratch/hydro/ymao/data_assim/output/mocom/calib_v1/$bas/
# dir where discharge and param. info for all simulations are stored. 
# No trailing "/" needed
#
set max_attempts = 2000

# --------------------- END settings --------------------

\rm -R $stor_dir/$run_ident/*       # get rid of prior dirs in way of current run

#if (! -e $stor_dir/$run_ident) mkdir -p $stor_dir/$run_ident

#./sources/mocom/mocom.pcic $num_start $num_sets $num_param $num_tests $run_script $run_ident $optim_log $param_range_file $stor_dir

#echo $num_start $num_sets $num_param $num_tests $run_script $run_ident $optim_log $param_range_file $stor_dir

/gscratch/hydro/ymao/data_assim/mocom/pcic/MOCOM.v3 $num_start $num_sets $num_param $num_tests "python $run_script $optmize_cfg" $run_ident $optim_log $param_range_file $stor_dir $max_attempts



#echo ARGS: $num_start $num_sets $num_param $num_tests $run_script $run_ident $optim_log $param_range_file $stor_dir > args
#exit
#./sources/mocom/MOCOM-UA.aww $num_start $num_sets $num_param $num_tests $run_script $run_ident $optim_log $param_range_file $stor_dir

